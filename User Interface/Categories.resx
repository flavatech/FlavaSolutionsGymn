<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAABgZJREFUeF7tmkGOW8cBBXWhODvbgAyfwIscJkC2voCM3CT38t5re1qofnhgihr+
        /hyK1nQBBWk09XvI1xhIgvRhs9lsNpvNZrPZbDabzWaz2Ww2m83mvfLDp4+//vjbT3+eleM2K9zjEjhq
        s8rZS+CYzRnOXAJHbM6yegk8vrkHK5fAo5vB958+/nPIh4f54b8/ffdyCX/Y0Nfk0c0Y/mW834crl8D4
        v9vIX5LH3zdz/DnK0UtYHX/IEe+Xy/Gnt17CmfGHHPM+uTb+9LVLODv+kKPeH6+NP712CUfGf+mu/sbM
        ce+LW8efXl7Ckec/d59+/sfLj/pHVI58Pxwdfzov4ej44zuFL61/T+BT74PV8aefB10cf3J5Cfzyt8/Z
        8Y94bfxJXwK/9FzMb3U+PM0zjT+Zl8CHz8Mca3iPSzgy/vy69rlb/Pz8DeNPXvpf+elzcDnW+PmZSzg6
        /uiPPNOOZ46M/3Rce+NzGLKbWRmfRw89Oxzt33r88eK/9IYvB3qNM+NPbj1jNN/0+NNrQ11yj/Enr501
        Pvcuxp+eHax97azJtTNvff5pOTr+9Nobf4vxJ5dnH33+6Vgdf3o5wFuOP5lfY/X5p+Hs+NM5xCPGn8yv
        x4d/P+41/nSc9ajxV/nlf//680uSvT1Hxj8y7C1+rfEHNnpL9rYcHX9+q9/jEr7m+AMbvSV7O1bG59FD
        v7maX3v8gY3ekr0NZ8afrF7CrePbKC3ZMnZmS3Z/+Ge4m8cfl8Wj/8fRS7h1/IGN0pItY2e2ZPflnuNP
        br2EI+MPbJSWbBk7syW7H28x/uS1Szg6/sBGacmWsTNbsvvwluNPrl3CyvgDG6UlW8bObMnO84jxJ5eX
        sDr+wEZpyZaxM1uyczxy/Mm8hDPjD2yUlmwZO7MlO8fLCP+xsS+91/iTMfyZ8Qc2Sku2jJ3Zkp3nZVz9
        n1/TMf74TiF/GmyUlmwZO7Mluw/XLuFZxx/YKC3ZMnZmS3Y/Li/hmccf2CgtWbCmJQvWtGT3ZV7Cs48/
        sFFasmBNSxasacnuz/e/ffz31xjf3mRLFqxpyYI1LVmwpiX7drA32ZIFa1qyYE1LFqxpyR6HvYiWbBk7
        syUL1rRkwZqWLFjTkj0OexEt2TJ2ZksWrGnJgjUtWbCmJXsc9iJasmXszJYsWNOSBWtasmBNS/Y47EW0
        ZMvYmS1ZsKYlC9a0ZMGaluxx2ItoyYI1LVmwpiUL1rRkwZqWLFjTkj0OexEtWbCmJQvWtGTBmpYsWNOS
        BWtassdhL6IlC9a0ZMGalixY05IFa1qyYE1L9jjsRbRkwZqWLFjTkgVrWrJgTUsWrGnJ1rFDW7JgTUsW
        rGnJgjUtWbCmJQvWtGTBmpZsHTu0JQvWtGTBmpYsWNOSBWtasmBNSxasacnWsUNbsmBNSxasacmCNS1Z
        sKYlC9a0ZMGalmwdO7QlC9a0ZMGalixY05IFa1qyYE1LFqxpydaxQ1uyYE1LFqxpyYI1LVmwpiUL1rRk
        wZqWbB07tCUL1rRkwZqWLFjTkgVrWrJgTUsWrGnJ1rFDW7JgTUsWrGnJgjUtWbCmJQvWtGTBmpZsHTu0
        JQvWtGTBmpYsWNOSBWtasmBNSxasacnWsUNbsmBNSxasacmCNS1ZsKYlC9a0ZMGalmwdO7QlC9a0ZMGa
        lixY05IFa1qyYE1LFqxpydaxQ1uyYE1LFqxpyYI1LVmwpiUL1rRkwZqWbB07tCUL1rRkwZqWLFjTkgVr
        WrJgTUsWrGnJ1rFDW7JgTUsWrGnJgjUtWbCmJQvWtGTBmpZsHTu0JQvWtGTBmpYsWNOSBWtasmBNSxas
        acnWsUNbsmBNSxasacmCNS1ZsKYlC9a0ZMGalmwdO7QlC9a0ZMGalixY05IFa1qyYE1LFqxpydaxQ1uy
        YE1LFqxpyYI1LVmwpiUL1rRkwZqWbB07tCUL1rRkwZqWLFjTkgVrWrJgTUsWrGnJ1rFDW7JgTUsWrGnJ
        gjUtWbCmJQvWtGTBmpZsHTu0JQvWtGTBmpYsWNOSBWtasmBNSxasack2m81ms9lsNpvNBj58+AuB9IbJ
        EMz+1wAAAABJRU5ErkJggg==
</value>
  </data>
</root>